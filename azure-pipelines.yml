# Trigger CI automatically whenever main branch is changed
name: Angular Pubsub Azure CI Pipeline
pool:
  vmImage: "ubuntu-latest"

variables:
  AUTH_NPMTOKEN: $(NPM_TOKEN) # Mapping secret var
  IS_PULLREQUEST: $[eq(variables['Build.Reason'], 'PullRequest')]

trigger:
  - main

steps:
  - task: Cache@2 # Cache Node packages on build agent
    displayName: "Cache npm Dependencies"
    inputs:
      key: "**/package-lock.json, !**/node_modules/**/package-lock.json, !**/.*/**/package-lock.json"
      path: "$(Build.SourcesDirectory)/node_modules"
      cacheHitVar: CacheRestored

  - task: Npm@1 # Install npm packages on your build agent
    displayName: "Npm CI"
    inputs:
      command: ci
      verbose: false
    condition: eq(variables['CacheRestored'],False)

  - script: | # Update Build Number
      export newBuildNumber=$(node ./tools/version.js $(Build.BuildId) $(Build.SourceBranchName))
      echo $newBuildNumber
      echo "##vso[build.updatebuildnumber]$newBuildNumber"
    displayName: Update Build Number

  - script: echo "$(Build.BuildNumber)"
    displayName: "New Build Number"

  - script: npm run test:ci # Run unit tests
    enabled: true
    displayName: Test

  - task: PublishTestResults@2 # Publish test results
    displayName: Test Report
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "./coverage/fsms-angular-pubsub/test-report.xml"
      mergeTestResults: true
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1 # Publish code coverage results
    enabled: true
    displayName: Code Coverage
    inputs:
      codeCoverageTool: "Cobertura"
      summaryFileLocation: "./coverage/fsms-angular-pubsub/cobertura-coverage.xml"
    condition: succeededOrFailed()


   # Package web apps -->
  - script: npm run build:ci # Build Angular Project
    displayName: Build
    enabled: true

  # Package and deliver your code -->

  - task: CopyFiles@2
    displayName: "Copy to artifacts staging directory"
    enabled: true
    inputs:
      SourceFolder: "./dist/fsms-angular-pubsub"
      TargetFolder: "$(Build.ArtifactStagingDirectory)/npm"

  - task: ArchiveFiles@2
    displayName: "Archive artifacts in staging directory"
    enabled: true
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/npm"
      includeRootFolder: false

  - task: PublishBuildArtifacts@1 # Publish files to Azure Pipelines
    displayName: "Publish NPM Artifact"
    inputs:
      artifactName: npm
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/npm'
    enabled: true

  - script: | # Publish a module to a npm registry
      npm publish --access public
    enabled: false
    displayName: Publish NPM
    workingDirectory: '$(Build.ArtifactStagingDirectory)/npm'
    condition: |
      and(
        succeeded(),
        ne(variables['IS_PULLREQUEST'], 'true')
      )

  - script: | # Publish a module to a npm registry
      npm config set //registry.npmjs.org/:_authToken=$(AUTH_NPMTOKEN)
      npm config set scope "@fsms"
      # npm config list
      npm publish --access public
    displayName: Publish NPM
