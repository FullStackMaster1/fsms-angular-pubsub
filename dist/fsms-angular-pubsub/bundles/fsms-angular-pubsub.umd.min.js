!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs")):"function"==typeof define&&define.amd?define("fsms-angular-pubsub",["exports","@angular/core","rxjs"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["fsms-angular-pubsub"]={},e.ng.core,e.rxjs)}(this,(function(e,t,r){"use strict";var s=function(){function e(){this.map=new Map,this.subscriptions=[]}return e.prototype.subscribe=function(e){var t=e.message,r=e.callback,s=e.error,n=e.complete;if(!t)throw new Error("[PubSub Service] => Subscription method must get event name.");var u=t.type;this.hasSubject(u)||this.setNewSubject(u);var o=this.getSubject(u);if("function"!=typeof r)return o.asObservable();var i=o.asObservable().subscribe(r,s,n);return this.addSubscription(i),i},e.prototype.publish=function(e){if(!e)throw new Error("[PubSub Service] => Publish method must get event name.");this.hasSubject(e.type)&&this.getSubject(e.type).next(e)},e.prototype.clearAllSubscriptions=function(){this.subscriptions.forEach((function(e){return e&&e.unsubscribe()})),this.subscriptions.length=0,this.map.clear()},e.prototype.addSubscription=function(e){this.subscriptions.push(e)},e.prototype.getSubject=function(e){return this.map.get(e)},e.prototype.hasSubject=function(e){return this.map.has(e)},e.prototype.setNewSubject=function(e){this.map.set(e,new r.ReplaySubject)},e}();s.decorators=[{type:t.Injectable}];var n=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[s]}},e}();n.decorators=[{type:t.NgModule}];var u=function(){},o=function(){};e.Message=o,e.PubSubModule=n,e.PubSubService=s,e.SubscribeOptions=u,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=fsms-angular-pubsub.umd.min.js.map